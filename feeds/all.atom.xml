<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Wyatt Winters | Saving the world one computer at a time</title><link href="http://wyattwinters.com/" rel="alternate"></link><link href="http://wyattwinters.com/feeds/all.atom.xml" rel="self"></link><id>http://wyattwinters.com/</id><updated>2015-02-26T10:27:00+00:00</updated><entry><title>Vidreview1</title><link href="http://wyattwinters.com/vidreview1.html" rel="alternate"></link><updated>2015-02-26T10:27:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2015-02-26:vidreview1.html</id><summary type="html">&lt;p&gt;The complexity and novelty of the titles has hit rock bottom. Oh well. Here's Vidreview1:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Who&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Karen_Sandler" target="_blank"&gt;Karen Sandler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/AllThingsOpen/trademarks-allthingsopen" target="_blank"&gt;&lt;em&gt;Trademarks and Your Free and Open Source Software Project&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JY6AtbtAuts" target="_blank"&gt;https://www.youtube.com/watch?v=JY6AtbtAuts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2014-10-22&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Gist&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This talk is quite similar to Chapter 5 of &lt;a href="https://www.softwarefreedom.org/resources/2008/foss-primer.pdf"&gt;&lt;em&gt;A Legal Issues Primer for Open Source and Free Software Projects&lt;/em&gt;&lt;/a&gt; (PDF), likely because it was (at least in part) written by the same person. It covers trademark, and how it applies and helps / hinders FOSS projects.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Good&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The anecdotes were humorous, and helped reinforce the main points of the talk.&lt;/li&gt;
&lt;li&gt;I feel like the use of a trademark policy was more clear in the video than the written
chapter.&lt;/li&gt;
&lt;li&gt;I was on the fence / confused why a FOSS project needs to trademark things, but
the example about &lt;a href="http://evergreen-ils.org/" target="_blank"&gt;Evergreen&lt;/a&gt; gave a clear
use case.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Bad&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Not specific to the talk, but some of the questions were too quiet, and the
slides were occasionally difficult to see. Luckily they were posted &lt;a href="http://www.slideshare.net/AllThingsOpen/trademarks-allthingsopen" target="_blank"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Some of the content was redundant to the chapter we &lt;em&gt;just&lt;/em&gt; read.&lt;/li&gt;
&lt;li&gt;ORANGE SHIRT GUY STOP JIGGLING YOUR FOOT!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Questions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If common law trademarks can be enforced, what's the point of registering?&lt;/li&gt;
&lt;li&gt;Are there downsides to trademarking / registering trademarks?&lt;/li&gt;
&lt;li&gt;If you use a name frequently without the "™", can you "go back" and enforce
it if you start using the "™" with it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your Review&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I can't quite decide if this is a good reinforcement of the content of the reading, or
is just reduntant information with a smattering of funny stories. While I
did get good examples of the benefits of trademarking in FOSS projects, it
seems like the only real use is shutting down the distribution of malicious
 / backdoored versions of your software. Regardless, it was relatively entertaining, informative, and decently paced.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4/5 &amp;lt;review increments&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="bizlegfoss"></category></entry><entry><title>FOSS Primer Chapter 5 - Trademarks</title><link href="http://wyattwinters.com/foss-primer-chapter-5---trademarks.html" rel="alternate"></link><updated>2015-02-24T12:23:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2015-02-24:foss-primer-chapter-5---trademarks.html</id><summary type="html">&lt;h2&gt;Litreview5&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Who&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwarefreedom.org/" target="_blank"&gt;Software Freedom Law Center&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwarefreedom.org/resources/2008/foss-primer.pdf" target="_blank"&gt;&lt;em&gt;A Legal Issues Primer for Open Source and Free Software Projects&lt;/em&gt;&lt;/a&gt; (Chapter 5 this time)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwarefreedom.org/resources/2008/foss-primer.pdf" target="_blank"&gt;https://www.softwarefreedom.org/resources/2008/foss-primer.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The date on the title page indicates version 1.5.2 was released 2008-06-04&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Gist&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chapter 5 covers trademarks (both common law and registered), and how they
apply to and are used by FOSS projects.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Good&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The term "genericide" is pretty fantastic. I was familiar with the concept,
 but never had a name attached to it. What fun!&lt;/li&gt;
&lt;li&gt;I have a much more thorough understanding of "™" vs "®", and how each differ.&lt;/li&gt;
&lt;li&gt;The definition for class 9 trademarks is fantastic:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;"Scientific, nautical, surveying, photographic, cinematographic, optical, weighing, measuring, signalling [sic], checking (supervision), life-saving and teaching apparatus and instruments; apparatus and instruments for conducting, switching, transforming, accumulating, regulating or controlling electricity; apparatus for recording, transmission or reproduction of sound or images; magnetic data carriers, recording discs; compact discs, DVDs and other digital recording media; mechanisms for coin-operated apparatus; cash registers, calculating machines, data processing equipment, computers; computer software; fire-extinguishing apparatus." (&lt;a href="http://www.uspto.gov/trademark/trademark-updates-and-announcements/nice-agreement-tenth-edition-general-remarks-class" target="_blank"&gt;Source&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Because &lt;em&gt;of course&lt;/em&gt; computers and fire-extinguishing equipment are
in the same category. Also worth noting:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"This Class includes, in particular: ... protractors;"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Are there enough trademarks for brands of protractors being filed that this is necessary
to include?!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Bad&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The section on Cease and Desist letters seems oddly short. Granted, it is
difficult to give generic advice for such, but it seems like it should be
more verbose, given how frequent (and scary) C&amp;amp;Ds are.&lt;/li&gt;
&lt;li&gt;"use your trademark in a consistent and distinctive manner." I'm not writing
master, but this seems like a bad idea - both from a readability perspective,
and also from a not-seeming-like-a-self-important-weirdo perspective. If the
word in question is in &lt;strong&gt;bold&lt;/strong&gt; every time it's used, that seems off-putting.&lt;/li&gt;
&lt;li&gt;In my continuing train of being picky about grammar / spelling, "signaling"
is spelled wrong in the Class 9 description. In addition, there are &lt;em&gt;numerous&lt;/em&gt;
instances of British English: "jewellery," "colours," "tyres". What?!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Questions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As most FOSS projects are global (or at least have global reach),
are United States trademarks enforceable in other countries?&lt;/li&gt;
&lt;li&gt;When is it worth the trouble to register one's common law trademark?&lt;/li&gt;
&lt;li&gt;Do trademark applications ever get rejected, and if so, for what reasons?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your Review&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This chapter was significantly more helpful than the last. I definitely
have a better understanding of trademarks, and I feel like I could register
and enforce one with relative ease, provided I actually had anything worth
trademarking. The more I read legal things, it all seems so murky and
case-by-case that it's amazing there's any consistency to any of it. What
a strange set of systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4/5 &amp;lt;review increments&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="bizlegfoss"></category></entry><entry><title>Social Media is Terrifying</title><link href="http://wyattwinters.com/social-media-is-terrifying.html" rel="alternate"></link><updated>2015-02-22T14:17:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2015-02-22:social-media-is-terrifying.html</id><summary type="html">&lt;p&gt;Another week of independent study, another medium.com article. This week:&lt;/p&gt;
&lt;h2&gt;&lt;em&gt;What Is Public?&lt;/em&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Who&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dashes.com/anil/about.html" target="_blank"&gt;Anil Dash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/message/what-is-public-f33b16d780f9" target="_blank"&gt;&lt;em&gt;What Is Public?&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/message/what-is-public-f33b16d780f9" target="_blank"&gt;https://medium.com/message/what-is-public-f33b16d780f9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2014-07-24&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Gist&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This article discusses the post-internet concept of "public," and the numerous
issues surrounding "public" content.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Good&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I absolutely &lt;em&gt;despise&lt;/em&gt; Gawker and their entire network of sites, so I'm
always glad to see them disparaged by others.&lt;/li&gt;
&lt;li&gt;That Facebook chart is terrifying.&lt;/li&gt;
&lt;li&gt;The author's end goal is noble, so I respect that.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Bad&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"any of us might throw in a hashtag to gather our thoughts". I never want to
meet anyone who does that. Ever.&lt;/li&gt;
&lt;li&gt;While I admit that Twitter and Facebook both have significant "anti-privacy
creep," this article seems to be written from the perspective that Twitter and
Facebook are mandatory. I acknowledge that the regular, average user of social
media is less technical than I; I would like to hope that people understand that
the entirety of their generated content is being indexed and monetized.
Sadly, I know that isn't the case.&lt;/li&gt;
&lt;li&gt;This author apparently doesn't understand private messaging, or other
methods of communication besides Twitter and Facebook. There are a &lt;em&gt;vast&lt;/em&gt;
number of options for less-public communication on the internet, ranging from casual to
paranoid.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Questions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Given that the legal system &lt;em&gt;enabled&lt;/em&gt; things like the NSA's dragnet, does
legal reform for privacy / public content issues seem viable?&lt;/li&gt;
&lt;li&gt;Should social media companies be more explicit about their privacy settings
and / or their business models?&lt;/li&gt;
&lt;li&gt;Is this problem fixable, and if so, what would be some of the steps?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your Review&lt;/p&gt;
&lt;p&gt;I don't like this article. A number of places in the article talk about consent and the
end user not being able to give it concerning their content. This is
fundamentally flawed - the user gives consent for whatever they post as soon
as they post it. While this may not be ideal, that is the
current state of the social media, and that is unlikely to change any time
soon. One's options are take the good with the bad, or simply don't use
social media.&lt;/p&gt;
&lt;p&gt;While I agree that the wide variety of nastiness that can happen
online (swatting, doxxing, harassment, people sending pizzas) is deplorable,
there are also some positives to truly public content - educational value
(there have actually been some fascinating data aggregation projects),
and even the CDC &lt;a href="http://fcw.com/articles/2013/01/25/flu-social-media.aspx" target="_blank"&gt;tracking and predicting the flu&lt;/a&gt;. The internet, specifically social media is a terrifying beast,
but there are a number of cool things that come out of it. I don't think it's the
fault of the services themselves, but rather the small percentage of awful
people who use them for their own, malicious ends.&lt;/p&gt;
&lt;p&gt;This is all scary, uncharted territory for both society and our legal system.
Who knows if (and how much) it has to get worse before it gets better, if it does at all.
At the end of the day, all of this is opt-in. If you can't deal with the
potential wretchedness that could rear its head, don't sign up!&lt;/p&gt;
&lt;p&gt;1/5 &amp;lt;review increments&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="foscis"></category></entry><entry><title>Software Patents, and Corporate Pledges</title><link href="http://wyattwinters.com/software-patents-and-corporate-pledges.html" rel="alternate"></link><updated>2015-02-19T10:37:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2015-02-19:software-patents-and-corporate-pledges.html</id><summary type="html">&lt;p&gt;Continuing from last post, now we read pledges from a handful of companies to not be jerks about their patents, provided your potentially infringing code is open source! That's nice of them!&lt;/p&gt;
&lt;h2&gt;Litreview4&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Who&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com" target="_blank"&gt;Red Hat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.google.com" target="_blank"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ibm.com" target="_blank"&gt;IBM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.redhat.com/legal/patent_policy.html" target="_blank"&gt;Red Hat Patent Policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ibm.com/ibm/licensing/patents/pledgedpatents.pdf" target="_blank"&gt;IBM Statement of Non-Assertion of Named Patents Against OSS&lt;/a&gt; (PDF)&lt;/li&gt;
&lt;li&gt;Google's &lt;a href="https://www.google.com/patents/opnpledge/pledge/" target="_blank"&gt;Open Patent Non-Assertion Pledge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Red Hat Magazine's &lt;a href="https://www.redhat.com/magazine/001nov04/features/patents/" target="_blank"&gt;The Red Hat Patent Promise: Encouraging Innovation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.redhat.com/legal/patent_policy.html" target="_blank"&gt;http://www.redhat.com/legal/patent_policy.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ibm.com/ibm/licensing/patents/pledgedpatents.pdf" target="_blank"&gt;http://www.ibm.com/ibm/licensing/patents/pledgedpatents.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.google.com/patents/opnpledge/pledge/" target="_blank"&gt;https://www.google.com/patents/opnpledge/pledge/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com/magazine/001nov04/features/patents/" target="_blank"&gt;https://www.redhat.com/magazine/001nov04/features/patents/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Red Hat's Patent Pledge: ~2001&lt;/li&gt;
&lt;li&gt;Google's Pledge: Archive.org's first scrape is &lt;a href="https://web.archive.org/web/20130331033642/http://www.google.com/patents/opnpledge/pledge" target="_blank"&gt;2013-03-31&lt;/a&gt;, so somewhere around then.&lt;/li&gt;
&lt;li&gt;The magazine article: November 2004. The article also mentions IBM's pledge, so some form of it existed around then.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Gist&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each company's pledge is essentially: "If you have infringing code in a project
that is licensed under an approved license, we won't sue you." Google reserves
the right to terminate their pledge though...&lt;/li&gt;
&lt;li&gt;The Red Hat article has some explanation and comparisons / critiques about
the pledges as they stood in 2004. Since I haven't heard any huge stories
about open source projects getting sued over patents, I guess they all worked
out?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Good&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IBM apparently owns a patent for &lt;a href="https://www.google.com/patents/US6285777" target="_blank"&gt;"Internet assisted mail"&lt;/a&gt;. They actually "invented" &lt;strong&gt;&lt;em&gt;printing out emails&lt;/em&gt;&lt;/strong&gt; and
physically mailing them to people. I almost want that to exist, just because
it's so absurd. In our impending dark cyberpunk dystopia, this may become a reality. I,
for one, am excited.&lt;ul&gt;
&lt;li&gt;I suppose this also means that I could implement this myself (as it's on their list of pledged patents), as long as I open source it...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Based on the list of patents that Google and IBM won't assert for FOSS projects,
it's amazing software gets made at all. There's just a patent called "Web browser system" (US 5793964 A)? I guess it's good they allow FOSS projects to use that one. It makes you
wonder how IE exists... Maybe that's why IE is so terrible, they have to design
around this patent.&lt;/li&gt;
&lt;li&gt;Something about Red Hat's use of "Really Big Companies" as a proper (pro?)noun is
pretty humorous.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Bad&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;From Google: "Google is therefore pledging the free use of certain of its patents".
I think they accidentally a word. That sure happens a lot in these fancy legal documents, when
one actually reads them. Weird.&lt;/li&gt;
&lt;li&gt;It's getting repetitive at this point, but even after a handful of weeks reading them,
legal documents are still incredibly bland.&lt;/li&gt;
&lt;li&gt;I suppose it's to be expected, but the Red Hat article could basically just read:
"There are other patent pledges, but ours is easily the best for everyone."
Have some humility!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Questions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Has any open source project (of any size) actually been sued over patent
infringement? If so, did they actually take it to court?&lt;/li&gt;
&lt;li&gt;Are there other companies that have similar pledges?&lt;/li&gt;
&lt;li&gt;Is "Internet assisted mail" actually implemented anywhere in the world, or
is that just a "in case this ever happens, we're ready" sort of patent?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your Review&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's tempting to rate these documents highly, simply because of what they
(theoretically) enable, and I understand they have to be written a certain way
to be (again, theoretically) legally enforceable, but it's still overwhelmingly
dull. That balances out to a 3/5, yeah?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3/5 &amp;lt;review increments&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="bizlegfoss"></category></entry><entry><title>Software Patents Sure Are Weird</title><link href="http://wyattwinters.com/software-patents-sure-are-weird.html" rel="alternate"></link><updated>2015-02-17T11:19:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2015-02-17:software-patents-sure-are-weird.html</id><summary type="html">&lt;h2&gt;Litreview3&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Who&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwarefreedom.org/" target="_blank"&gt;Software Freedom Law Center&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwarefreedom.org/resources/2008/foss-primer.pdf" target="_blank"&gt;&lt;em&gt;A Legal Issues Primer for Open Source and Free Software Projects&lt;/em&gt;&lt;/a&gt; (Chapter 4 this time)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwarefreedom.org/resources/2008/foss-primer.pdf" target="_blank"&gt;https://www.softwarefreedom.org/resources/2008/foss-primer.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The date on the title page indicates version 1.5.2 was released 2008-06-04&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Gist&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chapter 4 specifically covers software patents, and the various obstacles
(and generic advice on defenses) that software patents create for FOSS projects
and developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Good&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I have a much better understanding of why software patents are so hated -
they are confusing, and seem &lt;em&gt;designed&lt;/em&gt; for exploitation and other nastiness.&lt;/li&gt;
&lt;li&gt;I find that a legal organization (granted, in a general context) saying
"design around the obstacle patent" really humorous. That seems like a bad idea,
for a number of reasons.&lt;/li&gt;
&lt;li&gt;This may be incorrect, but I'm left with the impression that, if one wants
to put in the work, most patents can be invalidated (relatively) easily?
That's encouraging, I suppose.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Bad&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I have difficulty understanding why this document was written. It seems like
every other paragraph is "consult legal counsel for specific needs" or similar.
Why wouldn't I just go to a lawyer to begin with? (S)he could probably tell
me all this information, perhaps more succinctly.&lt;/li&gt;
&lt;li&gt;The whole section 4.3 "Becoming Aware of a Patent" seems really strange.
It (from what I understand) pretty much says "wait for them to come to you,
then get a lawyer". What?!&lt;/li&gt;
&lt;li&gt;This chapter was even less readable than the last two. I understand why
lawyers get paid so much - this is difficult to understand, and incredibly
boring!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Questions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Given the (from what I can tell) significant outrage about the current state
of software patents, is there or has there been any attempts at adjusting the laws
concerning software patents?&lt;/li&gt;
&lt;li&gt;Of the patent troll cases I've heard of, why are patents granted to such
vague and generic software patents?&lt;/li&gt;
&lt;li&gt;Who the heck comes up with the time periods in our legal system? Maintenance
fees are due every 4.5 years? You can seek damages for infringements occurring
up to 6 years in the past? &lt;em&gt;Why those numbers?!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your Review&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;While I did glean some useful knowledge from this chapter, I found most of it useless.
I feel like most sections were simply "you &lt;em&gt;could&lt;/em&gt; do this, but you should
probably just talk to a lawyer". In addition, I'm not sure if I should be &lt;em&gt;more&lt;/em&gt;
afraid of software patents, or &lt;em&gt;less&lt;/em&gt; so since they seem easy to invalidate.
There was some solid content, but it was buried behind vast walls of legal
jargon.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2/5 &amp;lt;review increments&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="bizlegfoss"></category></entry><entry><title>Software: Classification and Preservation</title><link href="http://wyattwinters.com/software-classification-and-preservation.html" rel="alternate"></link><updated>2015-02-15T16:00:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2015-02-15:software-classification-and-preservation.html</id><summary type="html">&lt;p&gt;So begins (perhaps a little late into the semester) my adventures in independent study.
In order to finish my FOSS minor at RIT, I am doing an independent study adaptation of a pre-existing course. Because of scheduling conflicts, I cannot take it normally before I graduate, and this is the last requirement to finish out the minor.&lt;/p&gt;
&lt;p&gt;Doing an independent study version of a class that is very much focused around
reading and group discussion is perhaps a bit suboptimal, but I have been tasked with
writing blog posts / reviews of the readings in lieu of group discussions. It will certainly be an adventure. So, here's the first one:&lt;/p&gt;
&lt;h2&gt;&lt;em&gt;Software, It’s a Thing&lt;/em&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Who&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/mkirschenbaum" target="_blank"&gt;Matthew Kirschenbaum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@mkirschenbaum/software-its-a-thing-a550448d0ed3" target="_blank"&gt;&lt;em&gt;Software, It’s a Thing&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@mkirschenbaum/software-its-a-thing-a550448d0ed3" target="_blank"&gt;https://medium.com/@mkirschenbaum/software-its-a-thing-a550448d0ed3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2014-07-24&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Gist&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This article is the transcript of the opening address at the Library of Congress' &lt;a href="http://www.digitalpreservation.gov/meetings/ndiipp14.html" target="_blank"&gt;Digital Preservation 2014&lt;/a&gt; conference. The author addresses the complexities of software as a "thing", and the difficulties that those complexities introduce to the archival and preservation of software in general.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Good&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's a fantastically organized and written piece of prose. I have never given too much thought about the various forms software can take, and, while some of the forms were perhaps a stretch, it was weird to think of software as "epigraphy". It's kind of strange / terrifying to contemplate all the places one's name or data appears on various computer / software systems throughout the world.&lt;/li&gt;
&lt;li&gt;"... is content enough? What counts as context for all our digital content?" This is a pretty serious issue, especially with older software. Trying to play almost any older C64 / Atari 2600 game is neigh-impossible without the manual. Sure, you can dump ROMs and put them on a server without breaking a sweat, but without the associated manuals and documentation, they aren't nearly as useful or interesting.&lt;/li&gt;
&lt;li&gt;Reading this article made me remember to fire up my &lt;a href="http://www.archiveteam.org/index.php?title=ArchiveTeam_Warrior" target="_blank"&gt;ArchiveTeam Warrior&lt;/a&gt; which I hadn't in a while. I might as well put all this spare RIT bandwidth to good use!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Bad&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;That title is pretty bad. Granted, some of the titles I have come up with aren't fantastic, but jeeze. Honorary mention for "Preserving.exe". Yeesh.&lt;/li&gt;
&lt;li&gt;These weren't the author's words, but Thomas Scoville's quote about code and jazz was excruciating. Maybe it's my distaste for jazz, or maybe I haven't been able to have code "flow" as Mr. Scoville describes, but that analogy seems like grasping at very distant straws.&lt;/li&gt;
&lt;li&gt;The "software as clickwrap" section was so short that it seemed like an afterthought. Software distribution does seem to be going increasingly in that direction, so why not discuss it more thoroughly?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Questions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is software preservation actually as difficult as it is made out to be in this article, or is just a manpower / volume issue?&lt;/li&gt;
&lt;li&gt;Why is software a "lesser priority" for the archival / preservation community?&lt;/li&gt;
&lt;li&gt;Has the DMCA or other copyright restrictions significantly hindered software archival efforts?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your Review&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As someone who has been vaguely interested in software archival (and spent a fair amount of time browsing around Archive.org), this was a pretty interesting article. While I don't completely agree with everything presented, it was certainly thought provoking, and perhaps a little distressing. It's alarming to consider the future of all these server based products which likely will cease to exist in their current form at some point. A number of MMO games have disappeared, and can never be played again. It's weird to consider that possibility for a majority of the software tools I use every day.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4/5 &amp;lt;review increments&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="foscis"></category></entry><entry><title>Terms of Service documents are a pain to read</title><link href="http://wyattwinters.com/terms-of-service-documents-are-a-pain-to-read.html" rel="alternate"></link><updated>2015-02-12T09:05:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2015-02-12:terms-of-service-documents-are-a-pain-to-read.html</id><summary type="html">&lt;p&gt;I should probably stop including the class and week in the title. It is getting
a bit redundant at this point, huh.&lt;/p&gt;
&lt;p&gt;Anyways, here's the other assignment for this week, a triple threat of documents!
I even read something no man was ever meant to read, the iTunes TOS!&lt;/p&gt;
&lt;h2&gt;Assignment 2: "Litreview2"&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Who&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.apple.com/" target="_blank"&gt;Apple Inc.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getfedora.org/" target="_blank"&gt;The Fedora Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/psf/" target="_blank"&gt;The Python Software Foundation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.apple.com/legal/internet-services/itunes/us/terms.html" target="_blank"&gt;The iTunes Terms of Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fedoraproject.org/wiki/Legal:Fedora_Project_Contributor_Agreement" target="_blank"&gt;The Fedora Project Contributors' Agreement&lt;/a&gt; (or the FPCA)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://legacy.python.org/psf/contrib/contrib-form/contributor-agreement.pdf" target="_blank"&gt;Python Software Foundation CLA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.apple.com/legal/internet-services/itunes/us/terms.html" target="_blank"&gt;https://www.apple.com/legal/internet-services/itunes/us/terms.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fedoraproject.org/wiki/Legal:Fedora_Project_Contributor_Agreement" target="_blank"&gt;https://fedoraproject.org/wiki/Legal:Fedora_Project_Contributor_Agreement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://legacy.python.org/psf/contrib/contrib-form/contributor-agreement.pdf" target="_blank"&gt;ttp://legacy.python.org/psf/contrib/contrib-form/contributor-agreement.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This iteration of the iTunes TOS was updated September 17, 2014&lt;/li&gt;
&lt;li&gt;The Fedora Project Contributor Agreement is on a wiki (which doesn't allow
anonymous edits, so it's probably fine), and the last edit
was &lt;a href="https://fedoraproject.org/w/index.php?title=Legal:Fedora_Project_Contributor_Agreement&amp;amp;oldid=402596" target="_blank"&gt;2015-02-03&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The Python CLA doesn't indicate any obvious date/time information.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Gist&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The iTunes TOS gets right to it in the first paragraph: "IF YOU DO NOT AGREE TO THESE TERMS, DO NOT CLICK "AGREE," AND DO NOT USE THE SERVICES."&lt;/li&gt;
&lt;li&gt;The Fedora Project Contributor Agreement is in place to ensure that contributions
are assigned appropriate licenses as to not impede the progress of the project.
It is clear to point out that "The FPCA is &lt;em&gt;not&lt;/em&gt; a copyright assignment agreement."&lt;/li&gt;
&lt;li&gt;The Python CLA is similar to the Fedora document, but significantly shorter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Good&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is a somewhat well-known quote, but the iTunes TOS indicates: "You also agree that you will not use these products [iTunes and associated services] for any purposes prohibited by United States law, including, without limitation, the development, design, manufacture, or production of nuclear, missile, or chemical or biological weapons." You would &lt;em&gt;hope&lt;/em&gt; that you could omit the part after "purposes prohibited by United States law," but apparently
they felt it was necessary to include that. As with other warning signs, it makes you
assume that someone did that at one point, so they had to include it?&lt;/li&gt;
&lt;li&gt;The FPCA is significantly more readable (and more concise) than the iTunes TOS.
The sections are also zero-indexed, so that's fun.&lt;/li&gt;
&lt;li&gt;The Python CLA is an outlier in this group of documents - the entire thing
is roughly 2 paragraphs, but (I assume) still does the job to not cause any problems.
That being said, it is easily the most readable and non-lawyer friendly document of the bunch.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Bad&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The iTunes TOS is &lt;em&gt;so long&lt;/em&gt;! I assume it's partly to cover every conceivable issue
(including biological weapons), but I imagine it's also partly so they can sneak in
nefarious things without being too noticeable. They also forgot / didn't type
a word here, under the heading "POPULAR NEAR ME":
"Apple will, from time to time, automatically collect information related to certain [aspects?] of your App Store Products."
I guess it's hard to proofread a 15790 word nightmare, but that's pretty obvious.&lt;/li&gt;
&lt;li&gt;It's pretty nitpicky, but having the FAQ before the document that the FAQ is &lt;em&gt;about&lt;/em&gt; seems
strange. In addition, I understand that it's for legal purposes, but the constant Use
of Frequent Capitalization on Defined Terms makes Reading it Pretty difficult.&lt;/li&gt;
&lt;li&gt;It's hard to find flaws in a document as short as the Python CLA, but I suppose having
time / date information on the PDF would be helpful.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Questions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I've heard conflicting things - are TOS and EULAs actually legally binding?&lt;/li&gt;
&lt;li&gt;Can I still submit very small patches (typo fixes, etc) to Fedora without
signing / agreeing to the FPCA? Not that I'm opposed to it, but I'm lazy.&lt;/li&gt;
&lt;li&gt;Have there been disputes that make contributor agreements necessary, or are they more
of a "if and when" sort of thing?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your Review&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reviewing legal documents seems weird. It's even more difficult because
I am not a lawyer, and I have no idea if they're any good. So, from that not-lawyer
position, these documents are &lt;strong&gt;&lt;em&gt;dreadfully boring&lt;/em&gt;&lt;/strong&gt;! While they vary in length
(iTunes obviously being the worst offender), they are written with so many
definitions and CamelCase words, they are neigh-unreadable most of the time.
The Python CLA is the most user-friendly document, but the link I was given
is on the subdomain legacy.python.org, so I'm guessing it was retired / updated
since this version was penned. I hope they didn't make it much longer...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2/5 &amp;lt;review increments&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="bizlegfoss"></category></entry><entry><title>Further adventures in GPL land (BIZLEGFOSS Week 3)</title><link href="http://wyattwinters.com/further-adventures-in-gpl-land-bizlegfoss-week-3.html" rel="alternate"></link><updated>2015-02-10T10:40:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2015-02-10:further-adventures-in-gpl-land-bizlegfoss-week-3.html</id><summary type="html">&lt;h2&gt;Assignment 1: "Litreview1"&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Who&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://copyleft.org/guide/" target="_blank"&gt;copyleft.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://copyleft.org/guide/" target="_blank"&gt;&lt;em&gt;Copyleft and the GNU General Public License: A Comprehensive Tutorial and Guide&lt;/em&gt;&lt;/a&gt; (Chapter 1 specifically)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://copyleft.org/guide/" target="_blank"&gt;http://copyleft.org/guide/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There are copyright notices dated as late as 2014. So some time in 2014 was the last update.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Gist&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The first chapter of this document explains various aspects of software freedom, such
as the GPL, copyleft ideology, and the differences between copyleft and public domain.
It is written in a (relatively) universally understandable way (meaning not
developer-specific).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Good&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Again, the in-PDF links are fantastic. Some are even to external sources!&lt;/li&gt;
&lt;li&gt;"It was once rare that this freedom [the freedom to run] was restricted by even proprietary software; but such is quite common today."&lt;ul&gt;
&lt;li&gt;Since most of my computing has been in the post-EULA era, this was interesting
to contemplate.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I now have a way better understanding of software freedom vs. public domain software.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Bad&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"Copyleft modifies, or 'hacks' copyright law..."&lt;ul&gt;
&lt;li&gt;The more people use the term "hack" the less I like seeing it. It's been
muddied and overused, and doesn't really have a concrete meaning anymore.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Some of the wording feels a bit biased. It feels more like a persuasive document,
rather than a general-information document for people trying to learn more about
software freedom and the GPL.&lt;/li&gt;
&lt;li&gt;While I love semantics as much as the next guy, it feels like their definitions of
similar terms are fuzzy at best.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Questions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Are there any downsides to licensing one's code under the GPL?&lt;/li&gt;
&lt;li&gt;If one wants to make a living by writing code, is the GPL still viable / appropriate?&lt;/li&gt;
&lt;li&gt;Are there cases where releasing into the public domain makes more sense than releasing
under the GPL?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your Review&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;While informative, this first chapter wasn't terribly interesting or engaging to read.
Regardless, it is undoubtedly well written, and exhaustively sourced. Given
the inherently dry nature of legal writing, it was more than adequate.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4/5 &amp;lt;review increments&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="bizlegfoss"></category></entry><entry><title>In which I read, watch, and write. (BIZLEGFOSS Week 2)</title><link href="http://wyattwinters.com/in-which-i-read-watch-and-write-bizlegfoss-week-2.html" rel="alternate"></link><updated>2015-02-04T13:48:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2015-02-04:in-which-i-read-watch-and-write-bizlegfoss-week-2.html</id><summary type="html">&lt;p&gt;Having to write on this site this often is weird. I had gotten into such a deep
rut of assuming "oh, that's not really worthy of a blog post" about nearly
everything I do (so much so that I hadn't posted anything in like 15 months),
that having to write blog posts (for grades!) this frequently, on a variety of
topics, seems quite strange. Given how relatively surgical and calculated my previous posts have
been, this continues to be a foreign practice to me. Hopefully it will get more
comfortable (or I will stop irrationally worrying about every little thing that
I post. If I go for volume, maybe people won't see the occasional dumb thing I post!)&lt;/p&gt;
&lt;p&gt;Onto the assignments for this week:&lt;/p&gt;
&lt;div id="vidreview0"&gt;&lt;/div&gt;

&lt;h2&gt;&lt;a href="#vidreview0"&gt;Assignment 1: "Vidreview0"&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Who&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/remixeverything" target="_blank"&gt;Kirby Ferguson&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://everythingisaremix.info/" target="_blank"&gt;&lt;em&gt;Everything is a Remix&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://everythingisaremix.info/watch-the-series/" target="_blank"&gt;http://everythingisaremix.info/watch-the-series/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The fourth and final part was released 2012-02-15.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Gist&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is a well done (and exhaustively sourced) documentary-of-sorts about
the history, impacts, and interactions between copyright, patent law, creative
culture, and (as the title would suggest) remixing.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Good&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The production values were quite good, and it was obvious Mr. Ferguson put
a lot of effort into it.&lt;/li&gt;
&lt;li&gt;I'm always a fan of not-actually-copyright-notice screens. This one wasn't
particularly funny, but still an excellent use of the trope.&lt;/li&gt;
&lt;li&gt;I have no idea why, but the animated sequence at 9:25 at least on &lt;a href="https://www.youtube.com/watch?v=coGpmA4saEk" target="_blank"&gt;this copy&lt;/a&gt; was maybe my favorite part.
Very Sesame Street-esque.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Bad&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Youtube version I was linked had some serious compression and artifacting.&lt;/li&gt;
&lt;li&gt;It's common in these documentary / educational type pieces, but I don't
really like the "call to action" bit at the end.&lt;/li&gt;
&lt;li&gt;There were points that just seemed over-produced - excessive transitions,
sequences with filters for no apparent reason, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Questions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The call to action part doesn't go far enough - what can one do to "fix" the issue(s)?&lt;/li&gt;
&lt;li&gt;While patent trolls are obviously bad, but what are the creator's opinion
about the current state of copyright length?&lt;/li&gt;
&lt;li&gt;Why was this video done in four parts?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your Review&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I actually enjoyed this quite a bit, despite some of the flaws noted above.
It was educational, engaging, and well made. However, it's difficult to understand
&lt;em&gt;why&lt;/em&gt; it was made, aside from being an educational piece. The creator obviously
feels strongly about the covered topics, but does nothing to encourage the viewer to
get involved in free/open source projects or really take any sort of action.
The ending felt more like it petered out than finished strong...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4/5 &amp;lt;review increments&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div id="litreview0"&gt;&lt;/div&gt;

&lt;h2&gt;&lt;a href="#litreview0"&gt;Assignment 2: "Litreview0"&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Who&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwarefreedom.org/" target="_blank"&gt;Software Freedom Law Center&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwarefreedom.org/resources/2008/foss-primer.pdf" target="_blank"&gt;&lt;em&gt;A Legal Issues Primer for Open Source and Free Software Projects&lt;/em&gt;&lt;/a&gt; (Intro to the end of Chapter 2)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwarefreedom.org/resources/2008/foss-primer.pdf" target="_blank"&gt;https://www.softwarefreedom.org/resources/2008/foss-primer.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The date on the title page indicates version 1.5.2 was released 2008-06-04&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Gist&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is a FOSS-developer targeted legal primer on a number of issues and
legal topics relevant to FOSS development. It covers copyright, licensing,
organizational structure, patents, and trademarks. It is intended to be a
guideline, not actual cut-and-dried legal advice.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Good&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Links in PDFs are awesome.&lt;/li&gt;
&lt;li&gt;"If you find yourself feeling the urge to write a new license, it’s a
good sign that you might need to reconsider your approach."&lt;/li&gt;
&lt;li&gt;I had no idea about the Affero GPL, which seems like an excellent idea.
I wonder why it's not implemented more widely (or maybe I haven't been looking for it)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Bad&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"...send a letter, via as many different methods as possible (at least by email, courier service, and fax)." Fax? Really?&lt;/li&gt;
&lt;li&gt;While I understand the need, at points the concentration of acronyms got a little
unreadable.&lt;/li&gt;
&lt;li&gt;The section on copyright for documentation seems oddly short, especially after
they talk up the importance of good documentation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Questions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is there a simple(r) solution for small projects?&lt;/li&gt;
&lt;li&gt;Is this information globally relevant, or USA specific?&lt;/li&gt;
&lt;li&gt;Why are there so many versions of the GPL, and what are the differences?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your Review&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's hard to make legal guidelines / information exciting. I understand that.
I suppose this could be far less engaging, but given the nature of the material,
it was engaging enough. More than anything, I'm kind of terrified of FOSS licenses
and how they interact now. No wonder GPL violations (and other license violations)
are so common.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3/5 &amp;lt;review increments&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="bizlegfoss"></category></entry><entry><title>BIZLEGFOSS@RIT - Week 1</title><link href="http://wyattwinters.com/bizlegfoss-at-rit-week-1.html" rel="alternate"></link><updated>2015-01-27T17:50:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2015-01-27:bizlegfoss-at-rit-week-1.html</id><summary type="html">&lt;p&gt;Whoa, what? An update on this website that has been almost completely stagnant for over a year? Weird!&lt;/p&gt;
&lt;p&gt;I'm somewhat hesitant to write a big long story giving exposition for why this post suddenly appeared, but since my Github account &lt;em&gt;is&lt;/em&gt; bound to the &lt;a href="https://github.com/FOSSRIT" target="_blank"&gt;RIT FOSSBox's group page&lt;/a&gt;, I suppose it's not all that big of a secret where I go to school. If you're stalking me (or the NSA agent assigned to me) and didn't draw that conclusion, well, there you go, and also, you're bad at what you do.&lt;/p&gt;
&lt;p&gt;So, RIT is the first university in North America to offer &lt;a href="http://magic.rit.edu/foss/" target="_blank"&gt;a minor in Free and Open Source Software&lt;/a&gt;, and I get to be one of the first people to complete it! As such, I am taking "Legal/Business Aspects of FOSS", or BIZLEGFOSS for short (the short name apparently subject to change, but I rather like it).&lt;/p&gt;
&lt;p&gt;The first homework assignment for this course was to make a handful of accounts (blog, github, freenode nickserv, etc), all of which I already had. The final part was to write a blog post about your experience. I could get a little recursive and write about writing this blog post, but that is both silly and time consuming. Hopefully this class will get me back into the blogging mindset. I do have a handful of topics to write about, so perhaps some of those will appear sooner rather than later.&lt;/p&gt;</summary><category term="bizlegfoss"></category></entry><entry><title>NCL Fall 2013 Preseason</title><link href="http://wyattwinters.com/ncl-fall-2013-preseason.html" rel="alternate"></link><updated>2013-10-15T17:50:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2013-10-15:ncl-fall-2013-preseason.html</id><summary type="html">&lt;p&gt;This past week was the National Cyber League's preseason event, and my first formal CTF game. This is apparently to place the competitors into divisions for the "real" games. I finished 27th out of 518. I am not displeased with this result. The highest position I ever got to was 8th, but I fell significantly once the weekend hit (the event was a week long), and people had more time to dig into the flags. &lt;/p&gt;
&lt;p&gt;Some thoughts I had during the event:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Less password cracking. While password cracking is indeed a valuable skill, for CTF challenges (especially ones with tighter time frames, the real games are ~4 hours), it comes down to who has the best / most GPUs. &lt;/li&gt;
&lt;li&gt;Monitor the targets (more). A large problem was the "Linux 1" target they had set up. The key to this one (spoilers!) was the &lt;a href="https://www.rapid7.com/db/modules/exploit/unix/ftp/vsftpd_234_backdoor"&gt;VSFTPD 2.3.4 backdoor&lt;/a&gt;. However, someone early in the week found this, opened the backdoor, and kept an active shell, preventing anyone else from getting in. This was eventually fixed on Thursday by adding a timer (by dropping the connection) to it. &lt;/li&gt;
&lt;li&gt;Track and punish saboteurs. Another target's trick was an unsecured phpmyadmin install with login of root and no password. Had I been feeling mean, I could easily drop all the tables, and wait for the admins to notice (and reset the target). This would prevent other players from getting the flags in that lag time. While I am well aware the difficulty of identifying wrongdoers and dangers of incorrectly punishing players, this is disappointing. &lt;/li&gt;
&lt;li&gt;Don't put flags on a Mediawiki install, unless you lock it down properly. I love Mediawiki, but an unmoderated wiki quickly falls into a war zone, as the Web 1 target exemplified. While it was easy enough to dig into the revision history, the target was &lt;em&gt;very&lt;/em&gt; slow from all the various attacks from the various users. I will admit that I enjoyed a message from the admins regarding this: "PS - Hitting the target repeatedly, with every automated tool you can think of, will likely not make the flags fall out." It turns out they were right. &lt;/li&gt;
&lt;li&gt;Make the flag-entry less strict. This may seem greedy, but I feel that the software should be smart enough to ignore leading/trailing spaces that sometimes tag along when copying and pasting text. I also had a couple issues with upper/lowercase, something that I don't think should make that much of a difference.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Overall, I very much enjoyed the event, despite these hurdles. I understand that it is difficult to monitor and keep numerous boxes up when being hammered by 500+ people, especially when those boxes are &lt;strong&gt;designed&lt;/strong&gt; to be insecure. I applaud the admins for their diligence in resettings boxes, and I appreciate their assistance with getting my account configured (unique email addresses can sometimes break stuff!). I look forward to the proper games, but wanted to reflect on the preseason while I had some time. &lt;/p&gt;</summary></entry><entry><title>Rubustat - the Raspberry Pi Thermostat</title><link href="http://wyattwinters.com/rubustat-the-raspberry-pi-thermostat.html" rel="alternate"></link><updated>2013-10-01T16:48:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2013-10-01:rubustat-the-raspberry-pi-thermostat.html</id><summary type="html">&lt;p&gt;It's been some time since I actually wrote a blog post. Mostly because I have had nothing original to write, and partially because school keeps me busy. Let's change that!&lt;/p&gt;
&lt;p&gt;I figured I would do a proper writeup on one of my summer projects - the Rubustat.&lt;/p&gt;
&lt;h2&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;While I enjoy programming and enjoyed making this project immensely, I make no claims that I am good at programming. High level Pythoners may wish to look away. However, the only way to get better is practice, right?&lt;/p&gt;
&lt;h2&gt;The inspiration&lt;/h2&gt;
&lt;p&gt;While at home for the summer, the existing thermostat in the house was acting up. It wouldn't keep programmed settings, the display was a cheap LCD that was losing contrast, and it was generally an annoyance. Having ordered a couple Pis earlier in the summer (because why not, it's a $40 computer!), I quickly began researching the potential of a Raspberry Pi thermostat.&lt;/p&gt;
&lt;h4&gt;Of course, someone already did it.&lt;/h4&gt;
&lt;p&gt;As is typically the case on the internet, someone had already implemented my idea, and was selling products. &lt;a href="http://makeatronics.blogspot.com"&gt;Nich Fugal&lt;/a&gt; had done exactly what I planned - &lt;a href="http://makeatronics.blogspot.com/2013/04/raspberry-pi-thermostat-hookups.html"&gt;hooked up an RPi to his thermostat&lt;/a&gt;. Handily enough, he offers the schematics and parts list he used! He also makes and &lt;a href="http://makeatronics.blogspot.com/2013/06/24v-ac-solid-state-relay-board.html"&gt;sells pre-made boards&lt;/a&gt; for easy solder-and-go purposes!&lt;/p&gt;
&lt;p&gt;However, I found his &lt;a href="http://makeatronics.blogspot.com/2013/04/thermostat-software.html"&gt;software&lt;/a&gt; implementation lacking, but admittedly functional.&lt;/p&gt;
&lt;h2&gt;The project&lt;/h2&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/thumbnails/ubustat/rubustathookups_regular.jpg" /&gt;&lt;br&gt;
The controller board (left) and thermometer (right) crammed into the GPIO ribbon cable
&lt;br&gt;
I soldered the connector on the PCB backwards. Oops!
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;While Nich did most of the hard work hardware wise, I knew I could improve the software. While I am by no means a web developer, I am halfway handy with Python, and Flask fulfilled my purposes well enough. Let's go through my amateur-at-best design process!&lt;/p&gt;
&lt;h3&gt;The name&lt;/h3&gt;
&lt;p&gt;Being a huge fan of lazy portmanteaus, I knew it had to be something raspberry related. The genus of the common raspberry is Rubus, so the name "Rubustat" practically made itself.&lt;/p&gt;
&lt;h3&gt;The daemon&lt;/h3&gt;
&lt;p&gt;The daemon was originally based on a straight copy of Nich's &lt;a href="http://makeatronics.blogspot.com/2013/04/thermostat-software.html"&gt;software&lt;/a&gt;. However, I found it to be a tad unstable, and used more external bash calls than I liked. While his use of outdoor temperature to determine heating vs cooling is clever, the primary user of the end product (my dad) preferred more manual control.&lt;/p&gt;
&lt;p&gt;After some extended debugging, I found that it was difficult to cleanly kill off my daemon (which at this point was a endless while loop). I instead opted to use a daemon class written by &lt;a href="http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/"&gt;Sander Marechal&lt;/a&gt; which worked better. To fully stabilize/debug the daemon, I had to add stale PID checks.&lt;/p&gt;
&lt;p&gt;In it's final version, the daemon handles the GPIO pins, sqlite logging (initially to make fancy graphs, but the thermometer I ended up using wasn't precise enough to make any graphs except ones that look like sawteeth), email error reporting (implemented because one of the alligator clips fell off on the temporary hardware and the house got outstandingly warm), and monitoring of the status file to know what temperature and mode to be in.&lt;/p&gt;
&lt;p&gt;I also got to learn the word "hysteresis", so that's fun.&lt;/p&gt;
&lt;h3&gt;The web UI&lt;/h3&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/thumbnails/ubustat/phoneui_regular.png" /&gt; &lt;br&gt;
Firefox for Android on a Galaxy Note&lt;br&gt;
&lt;br&gt;
&lt;img alt="" src="/images/thumbnails/ubustat/desktopui_regular.png" /&gt;
&lt;br&gt; Firefox on Windows
&lt;/center&gt;
&lt;br&gt;
This is primary reason the project was created. We could get any number of cheap, difficult-to-control thermostats, or we could get any of a slightly smaller number of expensive, web-enabled thermostats. The beauty of this project is we got a cheap, web-enabled thermostat! You don't have to learn how to program the schedules! I doesn't even have the &lt;strong&gt;&lt;em&gt;ability&lt;/em&gt;&lt;/strong&gt; to run schedules! (feature forthcoming?)&lt;/p&gt;
&lt;p&gt;The web UI looks like a hot pile of garbage. More importantly, however, is it a &lt;strong&gt;functional&lt;/strong&gt; hot pile of garbage. I don't have much exciting to say about this interface. It writes directly to the status file, which is in turn read by the daemon and adjusts the GPIO pins accordingly.&lt;/p&gt;
&lt;p&gt;The reason the interface is so dang big is because I have no idea how to do reactive design, and the idea was for the UI to be mobile-friendly. In a very inelegant way, it is mobile-friendly. I did however implement &lt;a href="https://github.com/ftlabs/fastclick"&gt;fastclick&lt;/a&gt; so it feels like you're poking a button rather than a Slowbro.&lt;/p&gt;
&lt;p&gt;Another in the line of features inspired by catastrophic failure is the daemon status section. I felt rather silly when the web UI started without the daemon, so the adjustments made would have no effect. While playing with this functionality, I included the GPIO statuses above that, the colors corresponding to the LEDs on the physical board.&lt;/p&gt;
&lt;h3&gt;The wrap up&lt;/h3&gt;
&lt;p&gt;I took &lt;em&gt;no&lt;/em&gt; security precautions in the code itself. If you make a Rubustat of your own &lt;strong&gt;&lt;em&gt;DO NOT&lt;/em&gt;&lt;/strong&gt; expose the RPi to the outside internet. It is a dreadful idea. It works just fine when confined to the LAN.&lt;/p&gt;
&lt;p&gt;I'm actually pretty pleased with how this thing turned out. While it is by no means particularly pretty or elegant, it gets the job done, and doesn't catch fire. That's a success in my book.&lt;/p&gt;
&lt;p&gt;If you want to look over the source or run it yourself, hit the &lt;a href="https://github.com/wywin/Rubustat"&gt;Github repo&lt;/a&gt;.&lt;/p&gt;</summary></entry><entry><title>Installing Tracks 2.2.2 on Debian Wheezy</title><link href="http://wyattwinters.com/installing-tracks-2-2-2-on-debian-wheezy.html" rel="alternate"></link><updated>2013-07-30T10:59:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2013-07-30:installing-tracks-2-2-2-on-debian-wheezy.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;This is a chronicle of my first Ruby on Rails deployment, and the things I learned while doing so. It is likely straight-forward and obvious for Rails vets, but hopefully this will help people who just want to host and use the great tool that is &lt;a href="http://getontracks.org/"&gt;Tracks&lt;/a&gt; without too much hassle. &lt;/p&gt;
&lt;p&gt;Assumed: apache2, mysql (you &lt;a href="https://github.com/TracksApp/tracks/blob/v2.2.2/doc/installation.textile#decide-on-a-database"&gt;can use sqlite3&lt;/a&gt; but I won't cover that here)&lt;/p&gt;
&lt;p&gt;optional: php5, phpmyadmin&lt;/p&gt;
&lt;p&gt;First, let's create a database and user for Tracks to use.
I used phpmyadmin here because its easiest for me, but you can do it as you see fit.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;CREATE USER &amp;#39;tracks&amp;#39;@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;***&amp;#39;;

GRANT USAGE ON * . * TO &amp;#39;tracks&amp;#39;@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;***&amp;#39; WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0 ;

CREATE DATABASE IF NOT EXISTS `tracks` ;

GRANT ALL PRIVILEGES ON `tracks` . * TO &amp;#39;tracks&amp;#39;@&amp;#39;localhost&amp;#39;;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Switch into a root shell with &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo -s
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;for the remainder of the install process.&lt;/p&gt;
&lt;p&gt;We need some packages, so let's install them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install curl unzip libxslt-dev libxml2-dev libmysql-ruby libmysqlclient-dev libcurl4-openssl-dev apache2-threaded-dev libapr1-dev libaprutil1-dev
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Tracks works best with Ruby 1.9.3, so we will use Ruby Version Manager (RVM) to install it. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;\curl -L https://get.rvm.io | bash
source /etc/profile.d/rvm.sh
rvm requirements
rvm install 1.9.3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Verify &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;which ruby
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;which gem
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;point to &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/usr/local/rvm/rubies/ruby-1.9.3-p448/bin/ruby
/usr/local/rvm/rubies/ruby-1.9.3-p448/bin/gem
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;respectively, or something close to that.&lt;/p&gt;
&lt;p&gt;Now we have Ruby all situated, it's time to get Tracks.
In /root run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget https://github.com/TracksApp/tracks/zipball/v2.2.2
mkdir /srv/tracks
unzip v2.2.2 -d /srv/tracks
cd /srv/tracks/TracksApp-tracks-bc8b817/
mv * ../
cd ..
rm -r TracksApp-tracks-bc8b817/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now Tracks is unzipped and ready to be installed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /srv/tracks
gem install bundler
bundle install
gem install passenger
/usr/local/rvm/gems/ruby-1.9.3-p448/bin/passenger-install-apache2-module
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The passenger install wizard will do its magic, and spit back out something similar to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;LoadModule passenger_module /usr/local/rvm/gems/ruby-1.9.3-p448/gems/passenger-4.0.10/buildout/apache2/mod_passenger.so
PassengerRoot /usr/local/rvm/gems/ruby-1.9.3-p448/gems/passenger-4.0.10
PassengerDefaultRuby /usr/local/rvm/wrappers/ruby-1.9.3-p448/ruby
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Append those lines along with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;PassengerDefaultUser www-data
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to the end of /etc/apache2/apache2.conf&lt;/p&gt;
&lt;p&gt;In your VirtualHosts files (likely at /etc/apache2/sites-enabled/&lt;em&gt;yoursitehere&lt;/em&gt;), add&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;RailsBaseURI /tracks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or whatever you want to be the directory that holds Tracks.&lt;/p&gt;
&lt;p&gt;Now that Apache knows where to look, we need to tell Tracks what database to look for, and what settings to use&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /srv/tracks/config
cp site.yml.tmpl site.yml
cp database.yml.tmpl database.yml
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Configure variables per &lt;a href="https://github.com/TracksApp/tracks/blob/v2.2.2/doc/installation.textile#configure-variables"&gt;official documentation.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Back in /srv/tracks finish installation with the new database settings:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;bundle exec rake db:migrate RAILS_ENV=production
bundle exec rake assets:precompile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The final step is adding a link in /var/www to the public folder of Tracks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ln -s /var/www/tracks /srv/tracks/public
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Restart Apache to make sure it's up to date:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/etc/init.d/apache2 restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and point your browser to the Apache server.
If everything went well, you should be prompted with the admin account creation page.&lt;/p&gt;
&lt;p&gt;Now go get things done! &lt;/p&gt;</summary></entry><entry><title>Backwards-compatible Short URL conversion of Mediawiki</title><link href="http://wyattwinters.com/backwards-compatible-short-url-conversion-of-mediawiki.html" rel="alternate"></link><updated>2013-07-14T14:27:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2013-07-14:backwards-compatible-short-url-conversion-of-mediawiki.html</id><summary type="html">&lt;p&gt;Further adventures in mod_rewrite town! This time I had to convert a Mediawiki install to Short URLs while maintaining backwards compatability. Let's see how it went!&lt;/p&gt;
&lt;!-- more --&gt;

&lt;p&gt;First, if you're like me, you don't plan ahead very much when doing software installs. A Mediawiki site I help with has been running for some time, and several links exist pointing to old, ugly URLs like "www.example.com/wiki/index.php/Main_Page". However, the decision makers wanted the links to lose the "index.php" in the URL!&lt;/p&gt;
&lt;p&gt;That's easy enough to do. The &lt;a href="https://www.mediawiki.org/wiki/Manual:Short_URL"&gt;Mediawiki meta-wiki&lt;/a&gt; has a great write up on the topic. They also link to &lt;a href="http://shorturls.redwerks.org/"&gt;this handy wizard&lt;/a&gt;, which I used.&lt;/p&gt;
&lt;p&gt;You should come up with something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;RewriteRule ^/?wiki(/.*)?$ %{DOCUMENT_ROOT}/w/index.php [QSA,L]
RewriteRule ^/?$ %{DOCUMENT_ROOT}/w/index.php [QSA,L]

RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} !-f
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} !-d
RewriteRule ^/?w/images/thumb/[0-9a-f]/[0-9a-f][0-9a-f]/([^/]+)/([0-9]+)px-.*$ %{DOCUMENT_ROOT}/w/thumb.php?f=$1&amp;amp;width=$2 [L,QSA,B]

RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} !-f
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} !-d
RewriteRule ^/?w/images/thumb/archive/[0-9a-f]/[0-9a-f][0-9a-f]/([^/]+)/([0-9]+)px-.*$ %{DOCUMENT_ROOT}/w/thumb.php?f=$1&amp;amp;width=$2&amp;amp;archived=1 [L,QSA,B]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's all great, but old links won't work anymore! Let's fix that by adding this before all the other new RewriteRules:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;RewriteRule ^/?wiki/index.php(/(.*))?$ /wiki/$2 [R=301,L]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you should have pretty URLs, and the old-style links should redirect to the new pretty ones too!&lt;/p&gt;</summary></entry><entry><title>Serving identical content on HTTPS and Tor hidden service</title><link href="http://wyattwinters.com/serving-identical-content-on-https-and-tor-hidden-service.html" rel="alternate"></link><updated>2013-07-03T21:52:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2013-07-03:serving-identical-content-on-https-and-tor-hidden-service.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;I recently came into an interesting problem- I wanted to serve the same website over the clearnet (the regular internet) using &lt;em&gt;only&lt;/em&gt; HTTPS, and serve that same content over a Tor hidden service. I assume you have at this point a web server installed (I like Apache) that will successfully serve HTTPS exclusively, but need to add the Tor.&lt;/p&gt;
&lt;!-- more --&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install Tor. You will want to use &lt;a href="https://www.torproject.org/download/download-unix.html.en"&gt;the Tor Project's repos&lt;/a&gt; to make sure you have the most up-to-date version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit your torrc. It is likely at /etc/tor/torrc. Uncomment the following lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;HiddenServiceDir /var/lib/tor/hiddenService/
HiddenServicePort 80 127.0.0.1:80
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and/or adjust them accordingly. If you have Apache listening on 443 (for HTTPS) and 80, you should be set with this config.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart Tor to apply new settings. In Debian Wheezy: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo /etc/init.d/tor restart
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get your hostname&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo cat /var/lib/tor/hiddenService/hostname
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;should be a string of characters followed by ".onion".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Backup your private key&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo cp /var/lib/tor/hiddenService/privateKey /root
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adjust your public html folder to move users based on their requested site&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Enable mod_rewrite (if not already)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo a2enmod rewrite
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit (on a default Debian Wheezy apache install) /var/www/.htaccess and add:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;RewriteEngine On
RewriteCond %{HTTP_HOST} !^youronionaddress.onion$
RewriteCond %{HTTPS} !on
RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test it out!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The .htaccess does the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Is the user not requesting the .onion? (Tor hidden services get confused when you talk HTTPS to them)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Is HTTPS not on? (If they don't want the .onion, and HTTPS isn't on, we should turn it on!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If conditions 1 and 2 are met:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Send them back to whatever address they requested, but with HTTPS.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Granted this does NOT hide the location of your webserver, but it will allow Tor users to save precious exit node bandwidth by staying inside the Tor network. This is especially neat because changes made on the clearnet will be reflected on the hidden service side, and vice versa.  &lt;/p&gt;</summary></entry><entry><title>Dota 2 on Xubuntu 13.04</title><link href="http://wyattwinters.com/dota-2-on-xubuntu-1304.html" rel="alternate"></link><updated>2013-06-20T00:50:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2013-06-20:dota-2-on-xubuntu-1304.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;UPDATE&lt;/em&gt;&lt;/strong&gt; Valve was awesome enough to do a native Linux port. &lt;a href="http://store.steampowered.com/app/570/"&gt;Get that version instead!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dota 2 is a really good game. Linux is really good. Out of the box, they don't play nice together. Let's fix that!&lt;/p&gt;
&lt;!-- more --&gt;

&lt;p&gt;First, let's lay out the details.&lt;/p&gt;
&lt;p&gt;I am running &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xubuntu 13.04 Raring Ringtail&lt;/li&gt;
&lt;li&gt;AMD Phenom(tm) II X4 970 Processor&lt;/li&gt;
&lt;li&gt;Nvidia GTX 465 with 319.23 drivers&lt;/li&gt;
&lt;li&gt;wine-1.6-rc2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and on all low settings I can easily get a solid 60 FPS in-game, with no dips. Your mileage may vary according to your hardware. &lt;/p&gt;
&lt;h2&gt;Drivers&lt;/h2&gt;
&lt;p&gt;First, we need the latest drivers from Nvidia (or ATI, depending on your card). The open source drivers are fine for day-to-day computing, but they don't handle games so well. A rather sexy fellow named Harold Hope made a delightful and very colorful script called &lt;a href="http://smxi.org/site/donations.htm"&gt;sgfxi&lt;/a&gt; that makes installing your latest and greatest binary drivers very easy. Grab a root shell, and run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /usr/local/bin &amp;amp;&amp;amp; wget -Nc smxi.org/sgfxi &amp;amp;&amp;amp; chmod +x sgfxi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we need to get into a non-X shell. CTRL-ALT-F1 will do the job nicely. Log in, and run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo sgfxi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and follow the wizard. You may have to do this once or twice, to remove the old free-as-in-speech drivers before installing the binary drivers. It should be easy to follow.&lt;/p&gt;
&lt;h2&gt;Getting Wine&lt;/h2&gt;
&lt;p&gt;Man, Wine has improved &lt;em&gt;so much&lt;/em&gt; since I last messed with it around the Gutsy Gibon days. Let's add their PPA&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo add-apt-repository ppa:ubuntu-wine/ppa &amp;amp;&amp;amp; sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install wine winetricks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and wait for all the goodies to download.&lt;/p&gt;
&lt;p&gt;After Wine is installed and situated, we will follow a modified/updated version of the writeup on &lt;a href="http://appdb.winehq.org/objectManager.php?sClass=version&amp;amp;iId=24458"&gt;WineHQ&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Here's what we need to do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;WINEPREFIX=~/.wine_dota2/ winecfg
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;will set up a new bottle (haha wine puns) to be our Dota 2 machine. &lt;/p&gt;
&lt;h2&gt;Getting Steamy&lt;/h2&gt;
&lt;p&gt;Now, let's install Steam!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget http://winetricks.org/winetricks
WINEPREFIX=~/.wine_dota2/ sh winetricks --no-isolate steam
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Follow the wizard, let it update, and log into Steam. Download Dota 2, and add some launch options. Right click Dota 2 in the games list -&amp;gt; properties -&amp;gt; set launch options. These work for me:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;-novid -console -noforcemaccel -forcemspd -useforcedmparms -high -nod3d9ex -nod3dx -noborder -gl
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;"-novid" disables the intro video. "-console" enables the console. "-noforcemaccel -forcemspd -useforcedmparms" disables mouse acceleration. "-high" starts the game with high CPU priority. "-nod3d9ex -nod3dx -gl" are video tweaks to make it run smoother. "-noborder" starts the game in a borderless window, making alt-tabbing out should the need occur much easier. &lt;/p&gt;
&lt;p&gt;It should be noted that with Wine wine-1.6-rc2 and the setup outlined above, I am not affected by any of the bugs on the &lt;a href="http://appdb.winehq.org/objectManager.php?sClass=version&amp;amp;iId=24458"&gt;WineHQ page&lt;/a&gt;. I'm not sure if that's luck of my hardware or improvements in Wine. There is some hitching when the game is loading things (hero selection, playing new sounds for the first time) but once everything is loaded up, the hitching disappears. Very playable, and not booting into Windows anytime soon!&lt;/p&gt;
&lt;p&gt;I don't have comments on this blog because comments are for jerks and weirdos. Email me if you have questions or comments, and I will edit the post accordingly. glhf!&lt;/p&gt;</summary></entry><entry><title>Encrypting emails and files with OpenPGP</title><link href="http://wyattwinters.com/encrypting-emails-and-files-with-openpgp.html" rel="alternate"></link><updated>2013-05-26T12:58:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2013-05-26:encrypting-emails-and-files-with-openpgp.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;This was originally written for a blog I co-run with my sister, over at nesasio.com (hence the domain in the screenshots). Actively writing to a single blog is hard enough, let alone multiple. Oh well, here's this post.&lt;/p&gt;
&lt;p&gt;Have you ever wanted to make sure nobody else saw an email or file except who you wanted? Have you ever wanted to feel like a super spy? Well, through the magic of math (and it is very close to magic!), a system called OpenPGP makes that possible!&lt;/p&gt;
&lt;!-- more --&gt;

&lt;p&gt;Without getting too detailed, OpenPGP and the toolset we will use - GNU Privacy Guard (GPG) uses a type of encryption called "asymmetric" as opposed to symmetric. Symmetric encryption uses the same key for scrambling and unscrambling a message. Asymmetric encryption used two different keys- a public key and private key, each with different purposes.&lt;/p&gt;
&lt;p&gt;Let's figure out what we need to send secret messages. Because of long-standing traditions, encryption scenarios refer to two characters: Alice and Bob. Alice is you, and Bob is who you want to talk to. Let's look at the process we need to follow to safely get secrets to Bob, using a paint metaphor.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/500px-Diffie-Hellman_Key_Exchange.gif" /&gt;
&lt;/center&gt;
We will be working on Windows 7, but the process will likely be similar for all versions of Windows, both forward and past.
&lt;h2&gt;&lt;strong&gt;Installation and creating your keypair&lt;/strong&gt;&lt;/h2&gt;
&lt;h4&gt;Step 1: the common paint&lt;/h4&gt;
First, we need to get the GPG tools! The download can be found at http://gpg4win.org/download.html. We will be using Gpg4win 2.1.0, the most recent stable release. Once downloaded, install it! The defaults should be fine for our purposes. On the screen labeled "Defined trustable root certificate", check to skip configuration. This is related to another encryption type, and will not affect us. You can view the README if you wish.&lt;/p&gt;
&lt;p&gt;After install, you should see a program called Kleopatra. This is the graphical user interface (GUI) that makes it easier to work with GPG keys and various operations related to GPG. Launch it.&lt;/p&gt;
&lt;h4&gt;Step 2: your secret color&lt;/h4&gt;

&lt;p&gt;Once Kleopatra is open, it will look fairly empty and boring. We need to create a keypair! Choose File -&amp;gt; New Certificate, and select "Create a personal OpenPGP key pair".&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/Email1.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;You will be prompted for name, email, and a comment should you choose one. These can be anything, so you can use your real name, a fake name, or any bit of text you like! If you want to make a "professional" key pair, it is recommended to use your full, real name. For now, I will create a key pair for this site!&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/Email2.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;The next screen is verifying the information you entered. If it looks right, hit create key. 
Now we have a little work to do. Think of a good, complicated password. I would recommend following xkcd 936:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="https://sslimgs.xkcd.com/comics/password_strength.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Enter your password (twice, to make sure you didn't fat finger it), and your key pair will be created!&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/Email3.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Encrypting with your new keypair&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/Email4.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;With your newly created keypair, you have generated your secret color. We have the mixture of step 3, and need to send our mixture to someone else to do the rest of the steps; to create a common secret. You have to get someone else's mixture - in this case, Bob's blueish mix he made on step 3. Bob can be anyone, Bob is your intended recipient. The recipient could be a friend following this tutorial, or &lt;a href="http://www.gpg4win.org/doc/en/gpg4win-compendium_13.html#sec_publishPerEmail"&gt;the GPG robot known as Adele&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For this tutorial, we will talk to Adele.&lt;/p&gt;
&lt;p&gt;Computers, handy things they are, can make our mixture sending, scrambling, and unscrambling easier for us. To that end, we will use the email program Thunderbird. Download it here: &lt;a href="https://www.mozilla.org/en-US/thunderbird/"&gt;https://www.mozilla.org/en-US/thunderbird/&lt;/a&gt; The standard defaults will do just fine. Launch Thunderbird after the install finishes.&lt;/p&gt;
&lt;p&gt;You can make Thunderbird the default client for email, newsgroups, and feeds if you so choose. These choices will not affect the tutorial.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/Email5.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Thunderbird, as a way of making money, offers the ability to buy a new email address, of which Mozilla, the people who make Thunderbird, get a little cut. For now, we will skip this and use an existing email.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/Email6.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Thunderbird is pretty clever here, and should be able to figure out the correct settings for your email address, if you use any sizeable mail service. Hit done, and Thunderbird will retrieve your mail.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/Email7.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Now that we have our email, we need to add the encryption part! In an attempt to look snazzy, Thunderbird hides the menu bar by default. Press the ALT key, and select Tools -&amp;gt; Add-ons. In the search box in the upper right, type in "enigmail", and the first option should be the right one. Hit install, and restart Thunderbird after it finishes.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/Email8.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Now we have all the software we need, so now it's time to use it! Press the "Write" button, and let's send an email to Adele!&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/Email9.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Before we send the email, we have to tell Enigmail to send our mixture to Adele. Assuming you used the same email in your keypair (your secret color) as you did when setting up Thunderbird, it should be smart enough to find the correct key / secret color.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/Email10.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Make sure "Sign Message" is checked, then send your email! Your passphrase box will pop up, to make sure you are who should really be using your secret color. Enter your passphrase, and the mail will go out.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/Email11.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;In your reply, there will be an important bit of information- Adele's public key - her mixture. At the top of the Thunderbird window, hit "Decrypt", and import her public key.&lt;/p&gt;
&lt;p&gt;Now, compose a new email to Adele, but this time, in the OpenPGP menu, check both Encrypt and Sign! And we're done! For anyone that isn't a robot, repeat the process. Send them a signed message, have them reply with a message that they signed, and then sign and encrypt all emails between the pair of you!&lt;/p&gt;
&lt;p&gt;Here's the decrypted version of the email:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/Email12.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;and the scrambled version!&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/Email13.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;h1&gt;What about files?&lt;/h1&gt;

&lt;p&gt;We already did the hard work with generating and exchanging our keys, so files are pretty simple to work with!&lt;/p&gt;
&lt;p&gt;First, I've made this super-secret treasure map I only want Adele to see!&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/File1.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Right click on the file in Windows Explorer and select "Sign and Encrypt"&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/File2.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;After some thinking, the Sign and Encrypt wizard from Kleopatra will appear.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/File3.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Next, select who you want to encrypt it to. I'll encrypt it to Adele, as I already have her public key handy.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/File4.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;If I try to continue, Kleopatra gives me this warning:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/File5.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;While this can be handy in some circumstances, let's encrypt it to myself also.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/File6.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Next, select who to sign as. I only have my own private key (secret color), so that seems like the best choice.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/File7.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Once that's done, it will process the file(s) you set to be signed and encrypted.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/File8.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Since I chose to save the unscrambled file after I made the scrambled one, my folder now looks like this:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt="" src="/images/openPGPTutorial/File9.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Now, the secretTreasure.png.gpg file can only be opened by Adele, and myself. However, she's a robot, and doesn't do file-handling yet. &lt;/p&gt;
&lt;p&gt;While this is by no means a complete or comprehensive OpenPGP lesson, this is enough to get you up and running, and passing encrypted emails and files back and forth between your friends. The neat part about the key exchange (the paint color exchange) is that the public keys (the mixtures) can be shared openly! As long as your secret key (secret color) stays secret, the system will be (relativley) secure!
If you are interested in more, &lt;a href="https://en.wikipedia.org/wiki/Public-key_encryption"&gt;I would recommend Wikipedia as a starting point. &lt;/a&gt;There is lots of documentation and articles on public key encryption, especially OpenPGP.&lt;/p&gt;&lt;/p&gt;</summary></entry><entry><title>Multi-platform, multi-machine Octopressing</title><link href="http://wyattwinters.com/multi-platform-multi-machine-octopressing.html" rel="alternate"></link><updated>2013-04-29T07:40:00+00:00</updated><author><name>Wyatt Winters</name></author><id>tag:wyattwinters.com,2013-04-29:multi-platform-multi-machine-octopressing.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;Moving to Octopress was a bit of a challenge. Moving from the centralized, easy-to-manage Wordpress ecosystem to the distributed git-managed Octopress was a kick in the head. After acciedently and repeatedly overwriting my own posts and configurations, I decided to clear up the problem once and for all. &lt;/p&gt;
&lt;p&gt;Blogging on Octopress from  multiple machines, without doing it a &lt;em&gt;very&lt;/em&gt; specific way, does bad, bad things to the blog. To rectify this, I make some scripts to treat the repo as the authoritative copy. &lt;/p&gt;
&lt;!-- more --&gt;

&lt;h1&gt;Get latest version from repo&lt;/h1&gt;
&lt;p&gt;Before starting to work I run this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
git fetch
git reset --hard origin/source
git pull origin &lt;span class="nb"&gt;source&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; ./_deploy
git fetch
git reset --hard origin/master
git pull origin master
&lt;span class="nb"&gt;cd&lt;/span&gt; ..
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or on Windows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;call git fetch origin
call git reset --hard origin/source
call git pull origin source
cd ./_deploy
call git fetch origin
call git reset --hard origin/master
call git pull origin master
cd ..
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to effectively mirror the existing stuff on the repo, destroying(!) any unpushed changes on my current machine.&lt;/p&gt;
&lt;h1&gt;After writing a post, page, or otherwise updating the site&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
rake generate
git add .
git commit -m &lt;span class="s2"&gt;&amp;quot;updating via script!&amp;quot;&lt;/span&gt;
git push origin &lt;span class="nb"&gt;source&lt;/span&gt;
rake deploy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or on Windows&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;call rake generate
call git add .
call git commit -m &amp;quot;updating via script on Windows!&amp;quot;
call git push origin source
call rake deploy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will cleanly and nicely regenerate the static html, and update both the source and site in the repo. &lt;/p&gt;
&lt;h1&gt;Setting up a computer to blog from for the first time&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone git@github.com:username/username.github.com.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;username.github.com
username.github.com&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout &lt;span class="nb"&gt;source&lt;/span&gt;
username.github.com&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir _deploy
username.github.com&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;_deploy
username.github.com/_deploy&lt;span class="nv"&gt;$ &lt;/span&gt;git init
username.github.com/_deploy&lt;span class="nv"&gt;$ &lt;/span&gt;git remote add origin git@github.com:username/username.github.com.git
username.github.com/_deploy&lt;span class="nv"&gt;$ &lt;/span&gt;git pull origin master
username.github.com/_deploy&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ..
username.github.com&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After you do all that, make sure you get the latest version from the repo using the scripts in the top of the post.
Hope that helps!&lt;/p&gt;</summary></entry></feed>